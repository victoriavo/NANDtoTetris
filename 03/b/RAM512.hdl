// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:

    //We can use the most significant bits from the address
    //to choose which register range the given address wants to access
    DMux8Way(in=load, sel=address[6..8],
    a=regs0, b=regs1, c=regs2, d=regs3,
    e=regs4, f=regs5, g=regs6, h=regs7); //a=000, b=111

    //Address: 000 000 000 - 000 111 111 (Registers 0-63);
    RAM64(in=in, load=regs0, address=address[0..5], out=out0);

    //Address: 001 000 000 - 001 111 111 (Registers 64-127);
    RAM64(in=in, load=regs1, address=address[0..5], out=out1);

    //Address: 010 000 000 - 010 111 111 (Registers 128-191);
    RAM64(in=in, load=regs2, address=address[0..5], out=out2);

    //Address: 011 000 000 - 011 111 111 (Registers 192-255);
    RAM64(in=in, load=regs3, address=address[0..5], out=out3);

    //Address: 100 000 000 - 100 111 111(Registers 256-319);
    RAM64(in=in, load=regs4, address=address[0..5], out=out4);

    //Address: 101 000 000 - 101 111 111 (Registers 320-383);
    RAM64(in=in, load=regs5, address=address[0..5], out=out5);

    //Address: 110 000 000 - 110 111 111 (Registers 384-447);
    RAM64(in=in, load=regs6, address=address[0..5], out=out6);

    //Address: 111 000 000 - 111 111 111(Registers 448-511);
    RAM64(in=in, load=regs7, address=address[0..5], out=out7);

    //Now we output the loaded value
    Mux8Way16(a=out0, b=out1, c=out2, d=out3, e=out4, f=out5, g=out6, h=out7, sel=address[6..8], out=out);

}
